parameters:  
  - name: environment
  - name: ArtifactName

jobs:
  - job: Job_Build
    displayName: Build
    
    pool:
        vmImage: "ubuntu-20.04"
    
    variables:
      CI: "true"
      ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        NX_BRANCH: "$(System.PullRequest.PullRequestNumber)"
        TARGET_BRANCH: "$(replace(variables['System.PullRequest.TargetBranch'], 'refs/heads/', 'origin/'))"
        BASE_SHA: "$(git merge-base $(TARGET_BRANCH) HEAD)"
      ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
        NX_BRANCH: "$(Build.SourceBranchName)"
        BASE_SHA: "$(git rev-parse HEAD~1)"
      HEAD_SHA: "$(git rev-parse HEAD)"

    steps:
      - checkout: self
        fetchDepth: 0 #disable shallow fetch

      - task: NodeTool@0
        inputs:
            versionSpec: "18.15.x"
        displayName: "Install Node.js"

      # - script: |
      #     echo 'VITE_AAD_AUTHORITY: $(VITE_AAD_AUTHORITY)'
      #     echo 'VITE_CONTAINER_NAME: $(VITE_CONTAINER_NAME)'
      #     echo 'VITE_MYSGSURL: $(VITE_MYSGSURL)'
      #   displayName: Print variables and environment

      - script: |
          npm -g install
        displayName: "npm install"

      - script: |
          npm i
        displayName: "Install dependencies"

        # Set Azure Devops CLI default settings
      - bash: az devops configure --defaults organization="$(System.TeamFoundationCollectionUri)" project="$(System.TeamProject)"
        displayName: "Set default Azure DevOps organization and project"

        # Get last successful commit from Azure Devops CLI
      - bash: |
          LAST_SHA=$(az pipelines build list --branch "$(Build.SourceBranchName)" --definition-ids "$(System.DefinitionId)" --result succeeded --top 1 --query "[0].triggerInfo.\"ci.sourceSha\"")
          if [ -z "$LAST_SHA" ]
          then
            LAST_SHA=$DEFAULT_BASE_SHA
          fi
          echo "Last successful commit SHA: $LAST_SHA"
          echo "##vso[task.setvariable variable=BASE_SHA]$LAST_SHA"
        displayName: "Get last successful commit SHA"
        env:
          AZURE_DEVOPS_EXT_PAT: "$(System.AccessToken)"

          - script: |
              npm run dev --parallel=3 --configuration=ci --skip-nx-cache
            displayName: "Compile and Hot-Reload for Development"

          - script: |
              npm run build --parallel=3 --configuration=ci --skip-nx-cache
            displayName: "Type-Check, Compile and Minify for Production"

          - script: |
              npm run test:unit -t test --parallel=3 --configuration=ci --skip-nx-cache
            displayName: "Unit Tests"

      - bash: |
          if [ -d $(system.defaultworkingdirectory)/dist ]; then
            echo "##vso[task.setVariable variable=IMGCARRIERAPPBUILT]true"
          fi

      - task: ArchiveFiles@2
        condition: eq(variables.IMGCARRIERAPPBUILT, 'true')
        inputs:
          rootFolderOrFile: "$(system.defaultworkingdirectory)/dist"
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/${{ parameters.environment }}/imagecarrier-ui.zip"
          includeRootFolder: false
        enabled: true
        displayName: "Zip ingestion app"

      - task: PublishBuildArtifacts@1
        condition: or( eq(variables.HOSTAPPBUILT, 'true'), eq(variables.IMGCARRIERAPPBUILT, 'true'))
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)/${{ parameters.environment }}/
          artifactName: '${{ parameters.ArtifactName }}'
        
      - bash: |
          if [ -f "$(Build.ArtifactStagingDirectory)/${{ parameters.environment }}/imagecarrier-ui.zip" ]; then
            echo "Source directory exists."
          else
            echo "Source directory does not exist."
            exit 1
          fi
        displayName: 'Check source directory existence'
